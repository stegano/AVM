{"version":3,"sources":["webpack:///webpack/bootstrap 634433080baf511bb1e9","webpack:///./index.js","webpack:///./component/Display/index.js","webpack:///./lib/framework/View.js","webpack:///./lib/utils/index.js","webpack:///./component/Display/model.js","webpack:///./component/Payment/index.js","webpack:///./component/Payment/model.js","webpack:///./lib/framework/Model.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;ACtCA;AACA;;;;;;;;;;ACDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA,cAAa,SAAS;AACtB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAgE,SAAS;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,cAAa,SAAS;AACtB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,8CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;;;;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACXA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,yCAAwC,YAAY;AACpD;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,cAAa,OAAO;AACpB,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,gDAA+C,EAAE;AACjD;AACA;;AAEA;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;;;;ACPA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB,eAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,kEAAiE,SAAS;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,aAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,gEAA+D,SAAS;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"index.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 634433080baf511bb1e9\n **/","require(\"./component/Display\");\nrequire(\"./component/Payment\");\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0\n **/","var View = require(\"../../lib/framework/View\");\nvar Utils = require(\"../../lib/utils\");\n\nvar model = require(\"./model\");\n/**\n * 판매 상품을 보여주는 뷰 컴포넌트\n * */\nvar Display = new View({\n  componentElementId: \"display\",\n  model: model,\n  initialize: function () {\n    var that = this;\n    this.itemTemplate = Utils.template(document.getElementById(\"DisplayItemTemplate\").innerHTML);\n    /**\n     * 모델 이벤트 바인딩\n     * */\n    this.model.on(\"change:items\", function (items) {\n      that.render(items);\n    });\n    /**\n     * 기본 설정으로 아이템 생성\n     * */\n    this.model.set({\n      items: this.genItems(null, 100, 800, 1, 3)\n    });\n  },\n  /**\n   * @param {String[]} itemNames 아이템 이름\n   * @param {Number} minPrice 최소 가격\n   * @param {Number} maxPrice 최대 가격\n   * @param {Number} minCount 최소 갯수\n   * @param {Number} maxCount 최대 갯수\n   * @return {Object[]} items 랜덤 순서, 랜덤 가격, 랜덤 갯수로 생성된 아이템 배열\n   * */\n  genItems: function (itemNames, minPrice, maxPrice, minCount, maxCount) {\n    var _itemNames = itemNames instanceof Array ? itemNames : [\n      \"펩시\",\n      \"V10\",\n      \"거름\",\n      \"맹물\",\n      \"환타\",\n      \"식혜\",\n      \"국물\",\n      \"박카스\"\n    ];\n    var _minPrice = Number(minPrice) || 100;\n    var _maxPrice = Number(maxPrice) || 800;\n    var _minCount = Number(minCount) || 1;\n    var _maxCount = Number(maxCount) || 3;\n    var ret = [];\n    for (var name, price, count, len = _itemNames.length, i = 0; i < len; i++) {\n      name = _itemNames.splice(this.genRandomValue(0, _itemNames.length - 1), 1)[0];\n      price = Math.round(this.genRandomValue(_minPrice, _maxPrice) / 100) * 100;\n      count = this.genRandomValue(_minCount, _maxCount);\n      ret.push({\n        name: name,\n        price: price,\n        count: count\n      });\n    }\n    return ret;\n  },\n  /**\n   * 랜덤 숫자 생성\n   * @param {number} min 최소 값\n   * @param {number} max 최대 값\n   * @return {number} `min ~ max` 사이의 정수\n   * */\n  genRandomValue: function (min, max) {\n    return parseInt(Math.random() * (max - min + 1) + min, 10);\n  },\n  /**\n   * 아이템을 그림\n   * @param {Object[]} items 아이템 정보\n   * @return {Object} View\n   * */\n  render: function (items) {\n    var $$root = Utils.$(\"#\" + this.componentElementId + \"> .items\")[0];\n    var chunk = [];\n    for (var item, i = 0, len = items.length; i < len; i++) {\n      item = items[i];\n      chunk.push(\n        this.itemTemplate({\n          productName: item.name,\n          price: item.price,\n          count: item.count\n        })\n      );\n    }\n    $$root.innerHTML = chunk.join(\"\");\n    return this;\n  }\n});\n\nmodule.exports = Display;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./component/Display/index.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * 컴포넌트를 구조적으로 사용하고 관리하기 위한 뷰 객체\n * @constructor\n * */\nvar View = function (options, property) {\n  var _options = options || {};\n  if (\"initialize\" in _options && typeof _options.initialize === \"function\") {\n    options.initialize(property);\n  }\n};\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/framework/View.js\n ** module id = 2\n ** module chunks = 0\n **/","var Utils = {\n  /**\n   * 간단한 템플릿 엔진\n   * @param {String} htmlString\n   * @return {Function} replaceTemplateData\n   * */\n  template: function (htmlString) {\n    var _htmlTemplate = htmlString.replace(/^\\s*|\\s*/gm, '');\n    /**\n     * @param {Object} data 치환할 데이터\n     * */\n    return function replaceTemplateData(data) {\n      var ret = _htmlTemplate;\n      for (var n in data) {\n        ret = ret.replace(new RegExp(\"{{=\" + n + \"}}\", \"gm\"), data[n]);\n      }\n      return ret;\n    };\n  },\n  /**\n   * `querySelector`를 좀 더 편하게 사용하기 위한 함수\n   * @param {String} querySelector 셀렉터\n   * @return {HTMLElement}\n   * */\n  $: function (querySelector) {\n    var ret = null;\n    var fragments = querySelector.split(\" \");\n    if (fragments[fragments.length - 1][0] === \"#\") {\n      ret = document.querySelector(querySelector)\n    } else {\n      ret = document.querySelectorAll(querySelector);\n    }\n    return ret;\n  },\n  /**\n   * 숫자에 콤마 추가\n   * */\n  comma: function (number) {\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n};\n\nmodule.exports = Utils;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/utils/index.js\n ** module id = 3\n ** module chunks = 0\n **/","var Model = require(\"../../lib/framework/Model\");\n/**\n * 판매 상품을 보여주는 뷰의 모델\n * */\nvar DisplayModel = new Model({\n  items: []\n});\nmodule.exports = DisplayModel;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./component/Display/model.js\n ** module id = 4\n ** module chunks = 0\n **/","var View = require(\"../../lib/framework/View\");\nvar Utils = require(\"../../lib/utils\");\n\nvar model = require(\"./model\");\n/**\n * 판매 상품을 보여주는 뷰 컴포넌트\n * */\nvar Payment = new View({\n  componentElementId: \"payment\",\n  model: model,\n  initialize: function () {\n    var that = this;\n    /**\n     * 모델 이벤트 바인딩\n     * */\n    this.model.on(\"change:myAccount\", function (account) {\n      that.renderUpdateMyAccount(account);\n    });\n    this.model.on(\"change:deposit\", function (deposit) {\n      that.renderUpdateDeposit(deposit);\n    });\n    /**\n     * 현재 가진 금액을 `10,000`으로 초기화\n     * */\n    this.model.set({\n      myAccount: 10000\n    });\n  },\n  /**\n   * 현재 소유한 금액을 업데이트\n   * */\n  renderUpdateMyAccount: function (account) {\n    Utils.$(\"#myAccount > .amount\")[0].innerText = Utils.comma(account);\n    return this;\n  },\n  /**\n   * 현재 넣은 금액을 업데이트\n   * */\n  renderUpdateDeposit: function (account) {\n    Utils.$(\"#deposit > .amount\")[0].innerText = Utils.comma(account);\n    return this;\n  }\n});\n\nmodule.exports = Payment;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./component/Payment/index.js\n ** module id = 5\n ** module chunks = 0\n **/","var Model = require(\"../../lib/framework/Model\");\n/**\n * 판매 상품을 보여주는 뷰의 모델\n * */\nvar PaymentModel = new Model({\n  myAccount: 0,\n  deposit: 0\n});\nmodule.exports = PaymentModel;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./component/Payment/model.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * 데이터를 관리하기 위한 모델, 이벤트를 바인딩하여 데이터의 변경을 감지(`Pub/Sub 패턴`)\n * @constructor\n * */\nvar Model = function (defaults) {\n  var modelData = defaults || {};\n  var events = {};\n  /**\n   * 데이터를 변경\n   * @param {String} newData 새로운 데이터\n   * @param {Object} options 옵션\n   * @return {Object} Model 모델\n   * */\n  this.set = function (newData, options) {\n    var _options = options || {\n        silent: false,\n        trigger: false\n      };\n    var changeEvents = null;\n    var isNewState = false;\n    /**\n     * 모델의 변경을 검사\n     * */\n    for (var n in newData) {\n      if (modelData[n] !== newData[n] || _options.trigger === true) {\n        isNewState = true;\n        changeEvents = events[\"change:\" + n] || [];\n        modelData[n] = newData[n];\n        for (var i = 0, len = changeEvents.length; i < len; i++) {\n          changeEvents[i].call(this, newData[n]);\n        }\n      }\n    }\n    /**\n     * 모델의 데이터가 하나라도 변경된 경우\n     * */\n    if ((isNewState && _options.silent !== true) || _options.trigger === true) {\n      changeEvents = events[\"change\"] || [];\n      for (var i = 0, len = changeEvents.length; i < len; i++) {\n        changeEvents[i].call(this, modelData);\n      }\n    }\n    return this;\n  };\n  /**\n   * 데이터를 가져옴.\n   * @param {String} key 키 값\n   * @return {Object} 데이터\n   * */\n  this.get = function (key) {\n    return modelData[key];\n  };\n  /**\n   * 이벤트 바인딩\n   * @param {String} eventName 이벤트 이름\n   * @param {Function} callback 콜백함수\n   * @return {Function} callback 콜백함수\n   * */\n  this.on = function (eventName, callback) {\n    if (!events[eventName]) {\n      events[eventName] = [];\n    }\n    events[eventName].push(callback);\n    return callback;\n  };\n  /**\n   * 이벤트 바인딩 제거\n   * @param {String} eventName 이벤트 이름\n   * @param {Function} callback 콜백함수\n   * @return {Object} Model 모델\n   * */\n  this.off = function (eventName, callback) {\n    if (eventName) {\n      var registeredEvents = events[eventName];\n      if (registeredEvents) {\n        for (var eventItem, len = registeredEvents.length, i = 0; i < len; i++) {\n          eventItem = registeredEvents[i];\n          if (eventItem === callback) {\n            events[eventName].splice(i, 1);\n          }\n        }\n      }\n    } else {\n      /**\n       * clear\n       * */\n      events = {};\n    }\n    return this;\n  };\n  /**\n   * @private\n   * */\n  this._getRawData = function () {\n    return modelData;\n  };\n  /**\n   * @private\n   * */\n  this._getEvents = function () {\n    return events;\n  }\n};\n\n/**\n * 데이터를 변경\n * @param {String} newData 새로운 데이터\n * @param {Object} options 옵션\n * @return {Object} Model 모델\n * */\nthis.set = function (newData, options) {\n  var _options = options || {\n      silent: false,\n      trigger: false\n    };\n  var changeEvents = null;\n  var isNewState = false;\n  /**\n   * 모델의 변경을 검사\n   * */\n  for (var n in newData) {\n    if (modelData[n] !== newData[n] || _options.trigger === true) {\n      isNewState = true;\n      changeEvents = events[\"change:\" + n] || [];\n      modelData[n] = newData[n];\n      for (var i = 0, len = changeEvents.length; i < len; i++) {\n        changeEvents[i].call(this, newData[n]);\n      }\n    }\n  }\n  /**\n   * 모델의 데이터가 하나라도 변경된 경우\n   * */\n  if ((isNewState && _options.silent !== true) || _options.trigger === true) {\n    changeEvents = events[\"change\"] || [];\n    for (var i = 0, len = changeEvents.length; i < len; i++) {\n      changeEvents[i].call(this, modelData);\n    }\n  }\n  return this;\n};\n/**\n * 데이터를 가져옴.\n * @param {String} key 키 값\n * @return {Object} 데이터\n * */\nthis.get = function (key) {\n  return modelData[key];\n};\n/**\n * 이벤트 바인딩\n * @param {String} eventName 이벤트 이름\n * @param {Function} callback 콜백함수\n * @return {Function} callback 콜백함수\n * */\nthis.on = function (eventName, callback) {\n  if (!events[eventName]) {\n    events[eventName] = [];\n  }\n  events[eventName].push(callback);\n  return callback;\n};\n/**\n * 이벤트 바인딩 제거\n * @param {String} eventName 이벤트 이름\n * @param {Function} callback 콜백함수\n * @return {Object} Model 모델\n * */\nthis.off = function (eventName, callback) {\n  if (eventName) {\n    var registeredEvents = events[eventName];\n    if (registeredEvents) {\n      for (var eventItem, len = registeredEvents.length, i = 0; i < len; i++) {\n        eventItem = registeredEvents[i];\n        if (eventItem === callback) {\n          events[eventName].splice(i, 1);\n        }\n      }\n    }\n  } else {\n    /**\n     * reset events\n     * */\n    events = {};\n  }\n  return this;\n};\n\nmodule.exports = Model;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/framework/Model.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}